import os


def cmd(command, verbose):
    """

    :param command:
    :param verbose:
    :return:
    """
    data_out = []
    os.system(command+' >> tmp.txt')
    if verbose:
        os.system('cat tmp.txt')
    for line in open('tmp.txt', 'r').readlines():
        data_out.append(line.replace('\n', ''))
    os.remove('tmp.txt')
    return data_out


def host_discovery(ip, flags):
    """

    :param ip:
    :param flags:
    :return:
    """
    subnet = ''
    for sub in ip.split('.')[0:len(ip.split('.')) - 1]:
        subnet += sub + '.'
    print '\033[1m\033[31mScanning %s0/24\033[0m' % subnet
    os.system('nmap %s %s0/24 -oN hosts.txt' % (flags, subnet))

    scan = {'': []}
    for line in open('hosts.txt', 'r').readlines():
        ln = line.replace('\n', '')
        try:
            host = ln.split('Nmap scan report for ')[1]
            scan[host] = []
            Found = True
        except IndexError:
            pass
        try:
            popen = ln.split(' open ')[1]
            scan[host].append(popen)
        except IndexError:
            pass
    os.remove('hosts.txt')
    return scan


ip = cmd('ifconfig | grep broadcast | cut -b 14-28', True).pop()
lan_scan = host_discovery(ip, '')

