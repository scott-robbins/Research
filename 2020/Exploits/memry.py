# **!!  This will only work on Linux  !!**
import multiprocessing
import time
import sys
import os


def whats_my_pid(fcn_name):
    os.system('ps aux | grep %s | cut -d " " -f 2')
    os.system('sudo ps aux | grep %s | cut -d " " -f 2 | while read pid;'
              ' do echo $pid >> procs.txt; done' % fcn_name)
    pids = []
    for proc in open('procs.txt', 'rb').readlines():
        pid = int(proc.replace('\n', '').replace(' ', ''))
        pids.append(pid)
    return pids


def start_trace(proc):
    os.system('strace -p %d' % proc)



header = '#include <string.h>\n#include <stdio.h>\n'
fcn_def = 'int main( int argc, char * argv [] ) {\n' \
          '}\n'

workers = multiprocessing.Pool(processes=2)
get_thread_meta = workers.apply_async(func=whats_my_pid, args=('memry.py',))
print 'Starting Threadception'
tic = time.time()

procs = get_thread_meta.get(3)
while len(procs):
    start_trace(procs.pop())
    if int(time.time()-tic)%4==0:
        procs = get_thread_meta.get(3)

# If you run this with sudo, weird things will happen to the console... lulz
